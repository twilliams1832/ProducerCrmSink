AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application demonstrating the Producer CRM Sink.
Parameters:
  Environment:
    Type: String
    Description: Environment; dev, qa, sit, stg, prod
    AllowedValues:
    - dev
    - sit
    - stg
    - prod
  ProducerServiceStreamArn:
    Type: String
  EventFilter:
    Type: String
Resources:
  ProducerServiceConsumer:
    Type: AWS::Kinesis::StreamConsumer
    Properties:
      ConsumerName:
        Fn::Sub: producer-crm-sink-stream-consumer-${Environment}
      StreamARN:
        Ref: ProducerServiceStreamArn
  KinesisTriggeredLambdaHandler:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - Role
        - Arn
      CodeUri: s3://test-cfn-bucket/669616f412f031d94839b392d3dcecd8
      FunctionName:
        Fn::Sub: producer-crm-sink-${Environment}
      Handler: dist/lambda-entry-point.handler
      Runtime: nodejs12.x
      Description: Function is called in response to a kinesis event
      Timeout: 900
      MemorySize: 3008
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          EVENT_FILTER:
            Ref: EventFilter
          NO_COLOR: 'true'
          IGNORE_STREAM_MESSAGES: 'false'
      Events:
        KinesisProducerServiceTrigger:
          Type: Kinesis
          Properties:
            Stream:
              Fn::GetAtt:
              - ProducerServiceConsumer
              - ConsumerARN
            StartingPosition: LATEST
            BatchSize: 100
            ParallelizationFactor: 10
            Enabled: true
            MaximumRetryAttempts: 7
            BisectBatchOnFunctionError: true
  Role:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName:
        Fn::Sub: producer-crm-sink-role-${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      - arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
      Policies:
      - PolicyName: necessary-permissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: kinesis:Get*
            Resource:
              Ref: ProducerServiceStreamArn
